@model schedulingViewModel
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["title"] = "الاحداث";
}

@section Head
{
    <link rel="stylesheet" href="~/assets/vendor/libs/fullcalendar/fullcalendar.css"/>
    <link rel="stylesheet" href="~/assets/vendor/css/pages/app-calendar.css"/>
}

<div class="layout-wrapper layout-content-navbar">
<div class="layout-container">
<!-- Menu -->
 <aside id="layout-menu" class="layout-menu menu-vertical menu bg-menu-theme">
            <div class="app-brand demo">
                <a href="/" class="app-brand-link">
                    <span class="app-brand-logo demo">
                        <img src="~/assets/img/favicon/crm-small.png" style="width:100% " alt="" />
                    </span>
                    <span class="app-brand-text demo menu-text fw-bold ms-2"
                        style="font-size:x-large">@SystemInfoResource.SystemName</span>
                </a>

                <a href="javascript:void(0);" class="layout-menu-toggle menu-link text-large ms-auto">
                    <i class="bx menu-toggle-icon fs-4 d-none d-xl-block align-middle"></i>
                    <i class="bx bx-x bx-sm d-xl-none d-block align-middle"></i>
                </a>
            </div>
            <div class="menu-divider mt-0"></div>
            <div class="menu-inner-shadow"></div>
            <ul class="menu-inner position-relative">
                <li class="menu-item ">
                    <a href="/" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-home"></i>
                        <div>الصفحة الرئيسية</div>
                    </a>
                </li>
                <li class="menu-item" style="">
                    <a href="/customer" class="menu-link ">
                        <i class="menu-icon tf-icons bx bx-user"></i>
                        <div>@SideBarResources.Clients</div>
                    </a>
                </li>
                <li class="menu-item ">
                    <a href="/call" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-phone"></i>
                        <div>@SideBarResources.Calls</div>
                    </a>
                </li>
                <li class="menu-item">
                    <a href="/message" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-message"></i>
                        <div>@SideBarResources.Message</div>
                    </a>
                </li>
                <li class="menu-item">
                    <a href="/email" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-envelope"></i>
                        <div>@SideBarResources.EmailMessage</div>
                    </a>
                </li>
                <li class="menu-item ">
                    <a href="/question" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-question-mark"></i>
                        <div>@SideBarResources.QuestionAndAnswers</div>
                    </a>
                </li>
                <li class="menu-item active">
                    <a href="/scheduling" class="menu-link">
                        <i class="menu-icon tf-icons bx bx-calendar"></i>
                        <div>@SideBarResources.Scheduling</div>
                    </a>
                </li>
                 @{
                    var user = await UserManager.GetUserAsync(User);
                    var role = await UserManager.GetRolesAsync(user);
                }
                @if (role.Contains("ADMIN"))
                {
                    <li class="menu-item">
                        <a href="javascript:void(0);" class="menu-link menu-toggle">
                            <i class="menu-icon tf-icons bx bx-cog"></i>
                            <div>@SideBarResources.Setting</div>
                        </a>
                        <ul class="menu-sub">
                            <li class="menu-item">
                                <a href="/setting" class="menu-link">
                                    <div>@SideBarResources.SystemUsers</div>
                                </a>
                            </li>
                        </ul>
                    </li>
                }
                @if (SignInManager.IsSignedIn(User))
                {
                    <li class="menu-item mt-auto position-absolute" style="bottom: 10px">
                        <div class="menu-link align-self-end d-flex align-items-center justify-content-between">
                            <a href="/setting/userinformation?id=@UserManager.GetUserId(User)" class="text-secondary">
                                <i class="menu-icon tf-icons bx bx-user"></i>

                                @{
                                    var extensions = (await UserManager.GetUserAsync(User))?.Extentions;
                                }
                                @if (extensions != null && extensions.Any())
                                {
                                    @((await UserManager.GetUserAsync(User))?.Extentions.First().ExtensionNumber)
                                }
                                @UserManager.GetUserName(User)
                            </a>
                            <a href="/Account/Logout" class="align-self-end text-secondary">
                                <i class="menu-icon tf-icons bx bx-log-in cursor-pointer icons-danger"></i>
                            </a>
                        </div>
                    </li>
                }
            </ul>
        </aside>
<!-- / Menu -->
<div class="layout-page">


<div class="content-wrapper">
<!-- Content -->

<div class="container-xxl flex-grow-1 container-p-y">
<div class="card app-calendar-wrapper">
<div class="row g-0">
<!-- Calendar Sidebar -->
<div class="app-calendar-sidebar col" id="app-calendar-sidebar">
    <div class="border-bottom p-4 my-sm-0 mb-3 d-none">
        <div class="d-grid">
            <button
                class="btn btn-primary btn-toggle-sidebar"
                data-bs-toggle="offcanvas"
                data-bs-target="#addEventSidebar"
                aria-controls="addEventSidebar">
                <i class="bx bx-plus"></i>
                <span class="align-middle">Add Event</span>
            </button>
        </div>
    </div>
    <div class="p-4">
        <!-- inline calendar (flatpicker) -->
        <div class="ms-n2">
            <div class="inline-calendar"></div>
        </div>

        <hr class="container-m-nx my-4"/>

        <!-- Filter -->
        <div class="mb-4">
            <small class="text-small text-muted text-uppercase align-middle">
                الفلتر
            </small>
        </div>

        <div class="form-check mb-2">
            <input
                class="form-check-input select-all"
                type="checkbox"
                id="selectAll"
                data-value="all"
                checked/>
            <label class="form-check-label" for="selectAll">
                عرض الكل
            </label>
        </div>

        <div class="app-calendar-events-filter">
            <div class="form-check form-check-success mb-2">
                <input
                    class="form-check-input input-filter"
                    type="checkbox"
                    id="select-done"
                    data-value="done"
                    checked/>
                <label class="form-check-label" for="select-done">اكتملت</label>
            </div>
            <div class="form-check form-check-danger mb-2">
                <input
                    class="form-check-input input-filter"
                    type="checkbox"
                    id="select-not-done"
                    data-value="notdone"
                    checked/>
                <label class="form-check-label" for="select-not-done">لم تكتمل</label>
            </div>
            <div class="form-check form-check-warning mb-2">
                <input
                    class="form-check-input input-filter"
                    type="checkbox"
                    id="select-waiting"
                    data-value="waiting"
                    checked/>
                <label class="form-check-label" for="select-waiting">قيد الانتظار</label>
            </div>
        </div>
    </div>
</div>
<!-- /Calendar Sidebar -->

<!-- Calendar & Modal -->
<div class="app-calendar-content col">
    <div class="card shadow-none border-0">
        <div class="card-body pb-0">
            <!-- FullCalendar -->
            <div id="calendar"></div>
        </div>
    </div>
    <div class="app-overlay"></div>
    <!-- FullCalendar Offcanvas -->
    <div
        class="offcanvas offcanvas-end event-sidebar"
        tabindex="-1"
        id="addEventSidebar"
        aria-labelledby="addEventSidebarLabel">
        <div class="offcanvas-header border-bottom">
            <h6 class="offcanvas-title" id="addEventSidebarLabel">Add Event</h6>
            <button
                type="button"
                class="btn-close text-reset"
                data-bs-dismiss="offcanvas"
                aria-label="Close">
            </button>
        </div>
        <div class="offcanvas-body">
            <form class="event-form pt-0" id="eventForm" onsubmit="return false">
                <div class="mb-3">
                    <label class="form-label" for="eventTitle">Title</label>
                    <input
                        type="text"
                        class="form-control"
                        id="eventTitle"
                        name="eventTitle"
                        placeholder="Event Title"/>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventLabel">Label</label>
                    <select class="select2 select-event-label form-select" id="eventLabel" name="eventLabel">
                        <option data-label="primary" value="Business" selected>Business</option>
                        <option data-label="danger" value="Personal">Personal</option>
                        <option data-label="warning" value="Family">Family</option>
                        <option data-label="success" value="Holiday">Holiday</option>
                        <option data-label="info" value="ETC">ETC</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventStartDate">Start Date</label>
                    <input
                        type="text"
                        class="form-control"
                        id="eventStartDate"
                        name="eventStartDate"
                        placeholder="Start Date"/>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventEndDate">End Date</label>
                    <input
                        type="text"
                        class="form-control"
                        id="eventEndDate"
                        name="eventEndDate"
                        placeholder="End Date"/>
                </div>
                <div class="mb-3">
                    <label class="switch">
                        <input type="checkbox" class="switch-input allDay-switch"/>
                        <span class="switch-toggle-slider">
                            <span class="switch-on"></span>
                            <span class="switch-off"></span>
                        </span>
                        <span class="switch-label">All Day</span>
                    </label>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventURL">Event URL</label>
                    <input
                        type="url"
                        class="form-control"
                        id="eventURL"
                        name="eventURL"
                        placeholder="https://www.google.com"/>
                </div>
                <div class="select2-primary mb-3">
                    <label class="form-label" for="eventGuests">Add Guests</label>
                    <select
                        class="select2 select-event-guests form-select"
                        id="eventGuests"
                        name="eventGuests"
                        multiple>
                        <option data-avatar="1.png" value="Jane Foster">Jane Foster</option>
                        <option data-avatar="3.png" value="Donna Frank">Donna Frank</option>
                        <option data-avatar="5.png" value="Gabrielle Robertson">Gabrielle Robertson</option>
                        <option data-avatar="7.png" value="Lori Spears">Lori Spears</option>
                        <option data-avatar="9.png" value="Sandy Vega">Sandy Vega</option>
                        <option data-avatar="11.png" value="Cheryl May">Cheryl May</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventLocation">Location</label>
                    <input
                        type="text"
                        class="form-control"
                        id="eventLocation"
                        name="eventLocation"
                        placeholder="Enter Location"/>
                </div>
                <div class="mb-3">
                    <label class="form-label" for="eventDescription">Description</label>
                    <textarea class="form-control" name="eventDescription" id="eventDescription"></textarea>
                </div>
                <div class="d-flex justify-content-start justify-content-sm-between my-4 mb-3">
                    <div>
                        <button type="submit" class="btn btn-primary btn-add-event me-1 me-sm-3">Add</button>
                        <button type="submit" class="btn btn-primary btn-update-event d-none me-1 me-sm-3">
                            Update
                        </button>
                        <button
                            type="reset"
                            class="btn btn-label-secondary btn-cancel me-1 me-sm-0"
                            data-bs-dismiss="offcanvas">
                            Cancel
                        </button>
                    </div>
                    <div>
                        <button class="btn btn-label-danger btn-delete-event d-none">Delete</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- /Calendar & Modal -->
</div>
</div>
</div>
</div>
</div>
</div>
</div>

@section Script{
    <script src="~/assets/vendor/libs/fullcalendar/fullcalendar.js"></script>
    <script>
  let date = new Date();
  let nextDay = new Date(new Date().getTime() + 24 * 60 * 60 * 1000);
  // prettier-ignore
  let nextMonth = date.getMonth() === 11 ? new Date(date.getFullYear() + 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() + 1, 1);
  // prettier-ignore
  let prevMonth = date.getMonth() === 11 ? new Date(date.getFullYear() - 1, 0, 1) : new Date(date.getFullYear(), date.getMonth() - 1, 1);
  
  document.addEventListener('DOMContentLoaded', function () {
  let events = [];

  @foreach (var item in Model.Responses)
  {
      <text>
          events.push({
                            id: @item.Id,
                            url: '@item.Url',
                            title: '@item.Title',
                            start: new Date('@item.Start'),
                            end: new Date('@item.End'),
                            allDay: false,
                            extendedProps: {
                              calendar: '@item.ExtendedProps.Calendar',
                            }
                          });
      </text>
  }
    
 let calendarsColor = {
        Done: 'success',
            NotDone: 'danger',
            Waiting: 'warning',
            All:"primary",
      }
          function selectedCalendars() {
            let selected = [],
              filterInputChecked = [].slice.call(document.querySelectorAll('.input-filter:checked'));
      
            filterInputChecked.forEach(item => {
              selected.push(item.getAttribute('data-value'));
            });
      
            return selected;
          }
      function fetchEvents(info, successCallback) {
            let calendars = selectedCalendars();
            // We are reading event object from app-calendar-events.js file directly by including that file above app-calendar file.
            // You should make an API call, look into above commented API call for reference
            let selectedEvents = events.filter(function (event) {
              console.log(event.extendedProps.calendar.toLowerCase());
              return calendars.includes(event.extendedProps.calendar.toLowerCase());
            });
            // if (selectedEvents.length > 0) {
            successCallback(selectedEvents);
            // }
          }
           const calendarEl = document.getElementById('calendar'),
           selectAll = document.querySelector('.select-all'),
           filterInput = [].slice.call(document.querySelectorAll('.input-filter')),
           inlineCalendar = document.querySelector('.inline-calendar');
 let inlineCalInstance;
 if (inlineCalendar) {
       inlineCalInstance = inlineCalendar.flatpickr({
         monthSelectorType: 'static',
         inline: true
       });
     }
 inlineCalInstance.config.onChange.push(function (date) {
       calendar.changeView(calendar.view.type, moment(date[0]).format('YYYY-MM-DD'));
       modifyToggler();
       appCalendarSidebar.classList.remove('show');
       appOverlay.classList.remove('show');
     });
let { dayGrid, interaction, timeGrid, list } = calendarPlugins;
let calendar = new Calendar(calendarEl, {
      initialView: 'dayGridMonth',
      events: fetchEvents,
      plugins: [interaction, dayGrid, timeGrid, list],
      dragScroll: true,
      dayMaxEvents: 2,
      eventResizableFromStart: true,
      headerToolbar: {
        start: 'prev,next, title',
        end: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'
      },
      locale: 'ar',
      direction: "rtl",
      initialDate: new Date(),
      navLinks: true, // can click day/week names to navigate views
      eventClassNames: function ({ event: calendarEvent }) {
        const colorName = calendarsColor[calendarEvent._def.extendedProps.calendar];
        // Background Color
        return ['fc-event-' + colorName];
      },
    });

    // Render calendar
    calendar.render();
    
    if (selectAll) {
          selectAll.addEventListener('click', e => {
            if (e.currentTarget.checked) {
              document.querySelectorAll('.input-filter').forEach(c => (c.checked = 1));
            } else {
              document.querySelectorAll('.input-filter').forEach(c => (c.checked = 0));
            }
            calendar.refetchEvents();
          });
        }
    if (filterInput) {
          filterInput.forEach(item => {
            item.addEventListener('click', () => {
              document.querySelectorAll('.input-filter:checked').length < document.querySelectorAll('.input-filter').length
                ? (selectAll.checked = false)
                : (selectAll.checked = true);
              calendar.refetchEvents();
            });
          });
        }
    });
  </script>
    @* <script src="~/assets/js/app-calendar.js"></script> *@
}